name: Run API Test Suite and Deploy Report

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 20 * * *'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      API_LOGIN_URL: ${{ secrets.API_LOGIN_URL }}
      API_EMAIL: ${{ secrets.API_EMAIL }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt allure-pytest

      - name: Install Allure CLI
        run: |
          sudo mkdir -p /opt/allure
          curl -Lo allure.tgz https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.18.1/allure-commandline-2.18.1.tgz
          sudo tar -zxvf allure.tgz -C /opt/allure --strip-components=1
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
          allure --version

      - name: Run tests
        run: pytest --maxfail=3 --disable-warnings --alluredir=allure-results

      - name: Generate Allure Report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report